# PublicID creation pattern for an origin created by RTDD.
publicIDpattern = RTDD.@time/%Y%m%d%H%M%S.%f@.@id@

# Defines a list of active profiles.
activeProfiles = ""

# Defines how long the profile data should be kept in memery (in minutes). This is useful
# to release memory (catalog waveform data) after a period of inactivity, but it means the
# waveforms will have to be reloaded whenever a new event occurs (i.e. it will take more
# time to relocate an origin).
# Set a negative value to keep the profile data always in memory.
profileTimeAlive = -1

# Save catalog waveforms to local disk to avoid reading them from the configured
# recordStream when a profile is loaded (see profileTimeAlive). Also the projected
# waveforms are saved (e.g. ZRT projection for S phase), which saves additional
# time when a profile is loaded.
# The waveforms are saved in the working directory and it is safe to delete them,
# if that's required for any reason. The waveforms will be then saved again on disk
# the next time the profile is loaded (they will be read again from the configured
# recordStream).
cacheWaveforms = false

# Enables relocation of any manual origin. If false, only event preferred
# origins are relocated.
manualOrigin = true

# Defines the directory used for storing temporary processing files.
workingDirectory = /tmp/rtdd

# Do not delete temporary processing files from the working directory after the
# processing is completed.
keepWorkingFiles = false

# Path to hypodd executable.
hypoddPath = hypodd

# Path to ph2dt executable. This configuration is used only for full catalog
# relocation (see command line option --relocate-catalog) and it is not needed
# in real time DD relocation.
ph2dtPath = ph2dt

# Specifies the interval in seconds to check/start scheduled operations.
cron.wakeupInterval = 10

# Specifies a list of delay times in seconds relative to event time to trigger
# the processing. When the first origin of an event arrives this list is used
# to construct the crontab for this event. Example: "60, 120, 300, 3600"
cron.delayTimes = 60,120,300,600,3600

# Specifies the delay in seconds to delay processing if a new authoritative
# origin arrives for an event.
cron.updateDelay = 60

# Specifies the maximum allowed idle time of a process before removed. The idle
# time is calculated if no further processing is scheduled and computes as:
# [now]-lastRun.
cron.eventMaxIdleTime = 3600

# Enables/disables updating of a cron log file. This file will be created at
# ~/.seiscomp3/log/[appname].sched and contains information about the scheduled
# events and the processing queue. The file is updated each n seconds, where n
# = rtdd.cron.wakeupInterval.
cron.logging = true
